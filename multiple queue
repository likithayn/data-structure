// IMPLEMENTATION OF MULTIPLE QUEUE //
#include <stdio.h>
#include<stdlib.h>
#define MAX_SIZE 12
#define no_of_queue 3

void insert(int * Q,int * rear,int * boun ,int i,int elem)
{
    if(rear[i]==boun[i+1])
    {
        printf("\nQUEUE %d IS FULL\n\n",i);
    }
    else
    {
        rear[i]++;
        Q[rear[i]]=elem;
    }
    
}
void delete(int * Q,int * rear ,int * front ,int i)
{

    if(front[i]>rear[i])
    {
        printf("\nQUEUE %d IS EMPTY\n\n",i);
    }
    else
    {
         printf("deleted element is %d",Q[front[i]]);
         front[i]++;
    }
   
}

void display(int * Q,int * rear,int * front,int i)
{
    
    for(i=0;i<no_of_queue;i++)
    {
        if(front[i]<rear[i])//display elements of queue
        {
             printf("elements of queue %d are\n",i);
            for(int j=front[i];j<=rear[i];j++)
            {
                printf(" %d \n",Q[j]);
            }
        }
        else//queue empty
        {
            printf("\n QUEUE %d  IS EMPTY \n\n",i);
        }
    }
    
}
int main()
{
    int Q[MAX_SIZE],rear[no_of_queue+1],front[no_of_queue],boun[no_of_queue+1],i,ch,elem;
    
    for(i=0;i<=no_of_queue;i++)
    {
        rear[i]=(MAX_SIZE/no_of_queue*i)-1;
        boun[i]=rear[i];
    }
    for(i=0;i<no_of_queue;i++)
    {
        front[i]=(MAX_SIZE/no_of_queue*i);
    }
    while(1)
    {
        printf("enter the queue number \n");
        scanf("%d",&i);
        printf("\n1.insert\n2.delete\n3.display\n4.exit\n");
        printf("enter the choice\n");
        scanf("%d",&ch);
        
        switch(ch)
        {
            case 1:printf("enter the element\n");
                   scanf("%d",&elem);
                   insert(Q,rear,boun,i,elem);
                    break;
            case 2:delete(Q,rear,front,i);
                    break;
            case 3:display(Q,rear,front,i);
                    break;
            case 4 :exit(0);
        }
      }
return 0;
}
